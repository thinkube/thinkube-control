# IMPORTANT: This file has a duplicate that must be kept in sync!
# Original: /home/thinkube/thinkube/ansible/roles/keycloak/keycloak_kubernetes_secret/tasks/main.yaml
# Copy: /home/thinkube/thinkube/thinkube-control/ansible/roles/keycloak/keycloak_kubernetes_secret/tasks/main.yaml
# If you modify this file, ensure the changes are reflected in both locations.


---
# roles/keycloak/keycloak_kubernetes_secret/tasks/main.yaml
#
# Description:
#   Creates a Kubernetes secret with Keycloak client credentials for applications.
#
# Parameters:
#   keycloak_k8s_namespace: The Kubernetes namespace for the secret (required)
#   keycloak_k8s_secret_name: The name of the secret to create (required)
#   keycloak_client_uuid: UUID of the client for which to create a secret (required)
#   keycloak_k8s_kubeconfig: Path to kubeconfig file (optional, defaults to in-cluster config)
#   keycloak_client_secret: The client secret (if already retrieved)

- name: Include common Keycloak tasks to get admin token
  include_role:
    name: keycloak/keycloak_common
  when: keycloak_client_secret is not defined

- name: Retrieve client secret if not already provided
  uri:
    url: "{{ keycloak_url }}/admin/realms/{{ keycloak_realm }}/clients/{{ keycloak_client_uuid }}/client-secret"
    method: GET
    headers:
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-Type: "application/json"
    validate_certs: "{{ keycloak_validate_certs | default(true) }}"
    status_code: 200
  register: client_secret_response
  when: keycloak_client_secret is not defined

- name: Set client secret fact
  set_fact:
    keycloak_client_secret: "{{ client_secret_response.json.value }}"
  when: client_secret_response is defined and client_secret_response.json is defined

- name: Create Kubernetes secret with client credentials
  kubernetes.core.k8s:
    kubeconfig: "{{ keycloak_k8s_kubeconfig | default(omit) }}"
    namespace: "{{ keycloak_k8s_namespace }}"
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ keycloak_k8s_secret_name }}"
      type: Opaque
      stringData:
        client_id: "{{ keycloak_client_id }}"
        client_secret: "{{ keycloak_client_secret }}"
        realm: "{{ keycloak_realm }}"
        auth_url: "{{ keycloak_url }}/realms/{{ keycloak_realm }}/protocol/openid-connect/auth"
        token_url: "{{ keycloak_url }}/realms/{{ keycloak_realm }}/protocol/openid-connect/token"
        api_url: "{{ keycloak_url }}/realms/{{ keycloak_realm }}/protocol/openid-connect/userinfo"
  when: keycloak_client_secret is defined

- name: Debug Kubernetes secret creation
  debug:
    msg: "Created Kubernetes secret '{{ keycloak_k8s_secret_name }}' in namespace '{{ keycloak_k8s_namespace }}'"
  when: keycloak_client_secret is defined