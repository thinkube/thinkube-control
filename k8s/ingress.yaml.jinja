apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ namespace }}-ingress
  namespace: {{ namespace }}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # WebSocket and long-running request timeouts (10 minutes)
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    # WebSocket specific settings
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/upstream-keepalive-timeout: "600"
    # Enable CORS for the API
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{ control_subdomain }}.{{ domain_name }}"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ control_subdomain }}.{{ domain_name }}
    secretName: {{ namespace }}-tls-secret
  rules:
  - host: {{ control_subdomain }}.{{ domain_name }}
    http:
      paths:
      - path: /mcp
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80