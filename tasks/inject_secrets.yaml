---
# tasks/inject_secrets.yaml
# Inject secrets from thinkube-control into application deployment
#
# This task:
# 1. Reads required secrets from manifest.yaml
# 2. Fetches encrypted values from database
# 3. Creates Kubernetes secret in app namespace
# 4. Updates deployment to reference the secret

- name: Check if manifest defines secrets
  ansible.builtin.set_fact:
    app_requires_secrets: "{{ manifest_content.secrets is defined and manifest_content.secrets | length > 0 }}"

- name: Process secrets if required
  when: app_requires_secrets | bool
  block:
    - name: Get required secret names from manifest
      ansible.builtin.set_fact:
        required_secrets: "{{ manifest_content.secrets | selectattr('required', 'equalto', true) | map(attribute='name') | list }}"
        optional_secrets: "{{ manifest_content.secrets | selectattr('required', 'equalto', false) | map(attribute='name') | list }}"
        all_secrets: "{{ manifest_content.secrets | map(attribute='name') | list }}"

    - name: Query secrets from database
      ansible.builtin.uri:
        url: "https://control.{{ domain_name }}/api/v1/secrets/"
        method: GET
        headers:
          Authorization: "Bearer {{ api_token }}"
      register: secrets_response

    - name: Extract available secret names
      ansible.builtin.set_fact:
        available_secrets: "{{ secrets_response.json | map(attribute='name') | list }}"

    - name: Check for missing required secrets
      ansible.builtin.fail:
        msg: "Missing required secrets: {{ required_secrets | difference(available_secrets) | join(', ') }}"
      when: required_secrets | difference(available_secrets) | length > 0

    - name: Prepare secret data
      ansible.builtin.set_fact:
        secret_data: {}

    - name: Fetch and decrypt each secret
      ansible.builtin.uri:
        url: "https://control.{{ domain_name }}/api/v1/secrets/decrypt/{{ item }}"
        method: POST
        headers:
          Authorization: "Bearer {{ api_token }}"
      register: decrypted_secret
      loop: "{{ all_secrets | intersect(available_secrets) }}"
      # no_log: true  # Temporarily disabled for debugging

    - name: Build secret data dictionary
      ansible.builtin.set_fact:
        secret_data: "{{ secret_data | combine({item.item: item.json.value | b64encode}) }}"
      loop: "{{ decrypted_secret.results }}"
      no_log: true

    - name: Create Kubernetes secret in app namespace
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ app_name }}-secrets"
            namespace: "{{ k8s_namespace }}"
            labels:
              app.kubernetes.io/name: "{{ app_name }}"
              app.kubernetes.io/managed-by: thinkube-control
          type: Opaque
          data: "{{ secret_data }}"

    - name: Update deployment to include secret environment variables
      ansible.builtin.set_fact:
        deployment_env_from:
          - secretRef:
              name: "{{ app_name }}-secrets"

    - name: Track secret usage in database
      ansible.builtin.uri:
        url: "https://control.{{ domain_name }}/api/v1/secrets/track-usage"
        method: POST
        headers:
          Authorization: "Bearer {{ api_token }}"
        body_format: json
        body:
          app_name: "{{ app_name }}"
          secret_names: "{{ all_secrets | intersect(available_secrets) }}"
      when: all_secrets | intersect(available_secrets) | length > 0

- name: Set empty env_from if no secrets
  ansible.builtin.set_fact:
    deployment_env_from: []
  when: not (app_requires_secrets | bool)